setwd("./rr1/RepData_PeerAssessment1")
read.csv("activity.csv")
data <- read.csv("activity.csv")
head(data)
data[1] <- as.number(data[1])
data[1] <- as.numeric(data[1])
data[,1] <- as.numeric(data[,1])
data <- read.csv("activity.csv")
class(data[,1])
class(data[,2])
data <- read.csv("activity.csv",colClasses=c("numeric","Date","numeric"))
class(data[,2])
class(data[,2])
head(data)
split(data,data[,2])
s <- split(data,data[,2])
head(s[1])
class(s[1])
sum(data[,1])
dataWithValues <- data[!is.na[1,],]
dataWithValues <- data[!is.na[,1],]
!is.na[,1]
is.na(data[,1])
dataWithValues <- data[!is.na(data[,1]),]
sum(dataWithValues[,1])
class(s)
class(s[1])
head(data)
lapply(s,sumSteps)
sumSteps <- function(l){
sum(l[,1])
}
lapply(s,sumSteps)
head(dataWithValues)
tail(dataWithValues)
lapply(s,sumSteps)
tail(dataWithValues)
tail(s)
dataWithValues <- data[!is.na(data[,1]),]
s <- split(dataWithValues,dataWithValues[,2])
tail(s)
lapply(s,sumSteps)
hist(sumStepsPerDay)
sumStepsPerDay <- lapply(s,sumSteps)
hist(sumStepsPerDay)
sumStepsPerday[1]
sumStepsPerDay[1]
class(sumStepsPerDay[1])
class(sumStepsPerDay[[1]])
sumStepsPerDay <- sapply(s,sumSteps)
class(sumStepsPerDay[[1]])
tail(sumStepsPerDay[[1]])
tail(sumStepsPerDay)
sumStepsPerDay
nrows(sumStepsPerDay)
nrow(sumStepsPerDay)
class(sumStepsPerDay)
sumStepsPerDay[1]
sumStepsPerDay[1,1]
dim(sumStepsPerDay)
sumStepsPerDay <- lapply(s,sumSteps)
sumStepsPerDay <- c()
divPerDay <- split(dataWithValues,dataWithValues[,2])
sumStepsPerDay <- c()
for(i in length(divPerDay){
oneDay <- divPerDay[i]
s <- sum(oneDay[,1])
sumStepsPerDay[i] <- s
}
results <- sapply(1:5, function(i) { i + 1})
results
results <- sapply(divPerDay, function(d) { sum(d[,1])})
results
class(results)
sumStepsPerDay <- sapply(divPerDay, function(d) { sum(d[,1])})
hist(sumStepsPerDay)
mean(sumStepsPerDay)
median(sumStepsPerDay)
install.packages("knitr")
head(dataWithValues)
plot(dataWithValues$steps~dataWithValues$interval, type="b")
dataWithValues <- data[!is.na(data$date),]
groupPerInterval <- split(dataWithValues,dataWithValues$interval)
avStepsPerInterval <- sapply(groupPerInterval, function(d) { av(d[,1])})
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
avStepsPerInterval
groupPerInterval
groupPerInterval <- split(dataWithValues,dataWithValues$interval)
groupPerInterval
data <- read.csv("activity.csv",colClasses=c("numeric","Date","numeric"))
dataWithValues <- data[!is.na(data$steps),]
groupPerInterval <- split(dataWithValues,dataWithValues$interval)
groupPerInterval
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
avStepsPerInterval
avStepsPerInterval <- sapply(groupPerInterval, function(d) { c(mean(d[,1]),d[,2],d[,3]})
avStepsPerInterval <- sapply(groupPerInterval, function(d) { c(mean(d[,1]),d[,2],d[,3])})
avStepsPerInterval
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
avStepsPerInterval
intervals <- unique(data$interval)
intervals
count(intervals)
length(intervals)
length(avStepsPerInterval)
plot(dataWithValues$steps~intervals, type="l")
plot(avStepsPerInterval~intervals, type="l")
intervals
hours
hours <- 0:23
hours
t <- paste(rep(hours,12),intervals)
t
t <- paste(rep(hours,12),intervals[1:12])
t
?rep
t <- paste(rep(hours,each=12),intervals[1:12])
t
?paste
t <- paste(rep(hours,each=12),intervals[1:12],sep=":")
t
minutes <- unique(data$interval)[1:12]
minutes <- unique(data$interval)[1:12]
hours <- 0:23
intervals <- paste(rep(hours,each=12),minutes[1:12],sep=":")
intervals
plot(avStepsPerInterval~intervals, type="l")
length(intervals)
groupPerInterval <- split(dataWithValues,dataWithValues$interval)
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
minutes <- unique(data$interval)[1:12]
hours <- 0:23
intervals <- paste(rep(hours,each=12),minutes[1:12],sep=":")
plot(avStepsPerInterval~intervals, type="l")
groupPerInterval <- split(dataWithValues,dataWithValues$interval)
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
intervals <- unique(data$interval)
minutes <- intervals[1:12]
hours <- 0:23
labelIntervals <- paste(rep(hours,each=12),minutes,sep=":")
plot(avStepsPerInterval~intervals, type="l")
plot(avStepsPerInterval~intervals, type="l",xlab="X values")
hist(sumStepsPerDay,xlab="Hours",ylab="Average of steps")
hist(sumStepsPerDay,xlab="Steps")
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps")
axis(1, labels=labelIntervals)
?axis
axis(1, at=1:288 labels=labelIntervals)
axis(1, at=1:288, labels=labelIntervals)
axis(1, at=1:3000, labels=labelIntervals)
axis(1, at=1:288, labels=labelIntervals)
axis(1, at=intervals, labels=labelIntervals)
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps")
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps")
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
axis(1, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
?axis
tail(intervals)
axis(1,cex.axis=0.7, at=1:2355, labels=labelIntervals)
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
axis(1, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1, at=intervals, labels=labelIntervals)
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~intervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=intervals, labels=labelIntervals)
plot(avStepsPerInterval~labelIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
numintervals <- seq(intervals)
plot(avStepsPerInterval~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
numIntervals <- seq(intervals)
plot(avStepsPerInterval~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
?axis
numNA <- length(data[is.na(data$steps),])
numNA
dataWithValues <- data[is.na(data$steps),]
dataWithNAValues <- data[is.na(data$steps),]
View(dataWithNAValues)
numNA <- nrow(dataWithNAValues)
numNA
dataWithMeans <- data
dataWithNAValues <- is.na(data$steps)
numNA <- nrow(dataWithNAValues)
numNA
numNA <- length(dataWithNAValues)
numNA
data[
dataWithNAValues <- data[is.na(data$steps),]
]
dataWithNAValues <- data[is.na(data$steps),]
numNA <- nrow(dataWithNAValues)
numNA
dataWithMeans <- data
dataWithMeans[is.na(data$steps),1] <- mea
dataWithMeans[is.na(data$steps),1] <- mean
dataWithMeans[is.na(data$steps),1] <- rep(mean)
m <- mean(sumStepsPerDay)
dataWithMeans[is.na(data$steps),1] <- m
View(dataWithMeans)
dataWithNAValues <- data[is.na(data$steps),]
numNA <- nrow(dataWithNAValues)
numNA
dataWithMeans <- data
dataWithMeans[is.na(data$steps),1] <- meanAll
dataWithValues,dataWithValues$date)
sumStepsPerDay <- sapply(groupPerDay, function(d) { sum(d[,1])})
hist(sumStepsPerDay,xlab="Steps")
meanAll <- mean(sumStep
groupPerDay <- split(dataWithValues,dataWithValues$date)
sumStepsPerDay <- sapply(groupPerDay, function(d) { sum(d[,1])})
hist(sumStepsPerDay,xlab="Steps")
meanAll <- mean(sumStepsPerDay)
dataWithMeans <- data
dataWithMeans[is.na(data$steps),1] <- meanAll
groupPerDay <- split(dataWithMeans,dataWithMeans$date)
sumStepsPerDay <- sapply(groupPerDay, function(d) { sum(d[,1])})
hist(sumStepsPerDay,xlab="Steps")
data <- read.csv("activity.csv",colClasses=c("numeric","Date","numeric"))
dataWithValues <- data[!is.na(data$steps),]
```
## What is mean total number of steps taken per day?
```{r fig.width=7, fig.height=6,echo=TRUE}
groupPerDay <- split(dataWithValues,dataWithValues$date)
sumStepsPerDay <- sapply(groupPerDay, function(d) { sum(d[,1])})
hist1 <- hist(sumStepsPerDay,xlab="Steps")
mean1 <- mean(sumStepsPerDay)
mean1
median1 <- median(sumStepsPerDay)
median1
dataWithMeans <- data
dataWithMeans[is.na(data$steps),1] <- mean1
groupPerDay2 <- split(dataWithMeans,dataWithMeans$date)
sumStepsPerDay2 <- sapply(groupPerDay2, function(d) { sum(d[,1])})
mean2 <- mean(sumStepsPerDay2)
mean2
hist2 <- hist(sumStepsPerDay2,xlab="Steps")
dataWithMeans[is.na(dataWithMeans$steps),1] <- avStepsPerInterval[dataWithMeans$interval/5 + 1]
groupPerDay2 <- split(dataWithMeans,dataWithMeans$date)
sumStepsPerDay2 <- sapply(groupPerDay2, function(d) { sum(d[,1])})
hist2 <- hist(sumStepsPerDay2,xlab="Steps")
dataWithMeans <- data
dataWithMeans[is.na(dataWithMeans$steps),1] <- avStepsPerInterval[dataWithMeans$interval/5 + 1]
dataWithMeans[is.na(dataWithMeans$steps),1] <- avStepsPerInterval[1]
groupPerDay2 <- split(dataWithMeans,dataWithMeans$date)
sumStepsPerDay2 <- sapply(groupPerDay2, function(d) { sum(d[,1])})
hist2 <- hist(sumStepsPerDay2,xlab="Steps")
dataWithMeans[is.na(dataWithMeans$steps),1] <- avStepsPerInterval[dataWithMeans$interval]
dataWithMeans[is.na(dataWithMeans$steps),1]
dataWithMeans[is.na(dataWithMeans$steps),1]
dataWithMeans <- data
dataWithMeans[is.na(dataWithMeans$steps),1]
dataWithMeans[is.na(dataWithMeans$steps),1] <- mean1
dataWithMeans[is.na(dataWithMeans$steps),1]
dataWithMeans <- data
dataWithMeans[is.na(dataWithMeans$steps),1] <- rep(mean1)
dataWithMeans[is.na(dataWithMeans$steps),1]
dataWithMeans <- data
dataWithMeans[is.na(dataWithMeans$steps),1]
numNA
dataWithMeans[is.na(dataWithMeans$steps),1] <- rep(mean1,numNA)
dataWithMeans[is.na(dataWithMeans$steps),1]
rep(mean1,numNA)
dataWithMeans[is.na(dataWithMeans$steps),] <- mean1
dataWithMeans <- data
dataWithMeans[is.na(dataWithMeans$steps),1] <- mean1
dataWithMeans[dataWithMeans$steps==mean1,1]
groupPerDay2 <- split(dataWithMeans,dataWithMeans$date)
sumStepsPerDay2 <- sapply(groupPerDay2, function(d) { sum(d[,1])})
hist2 <- hist(sumStepsPerDay2,xlab="Steps")
dataWithMeans <- data
avStepsPerInterval[dataWithMeans[is.na(dataWithMeans$steps),3]]
dataWithMeans[is.na(dataWithMeans$steps),3]
dataWithMeans[is.na(dataWithMeans$steps),3] / 5
dataWithMeans[is.na(dataWithMeans$steps),3] / 5 +1
avStepsPerInterval
length(avStepsPerInterval)
dataWithMeans <- data
dataWithMeans$interval2 <- 1:288
dataWithMeans[is.na(dataWithMeans$steps),4]
dataWithMeans[is.na(dataWithMeans$steps),1] <- dataWithMeans[is.na(dataWithMeans$steps),4]
groupPerDay2 <- split(dataWithMeans,dataWithMeans$date)
sumStepsPerDay2 <- sapply(groupPerDay2, function(d) { sum(d[,1])})
hist2 <- hist(sumStepsPerDay2,xlab="Steps")
mean2 <- mean(sumStepsPerDay2)
mean2
median2 <- median(sumStepsPerDay2)
median2
hist1 <- hist(sumStepsPerDay,xlab="Steps")
weekdays()
?weekdays
weekdays(.leap.seconds)
Sys.setlocale("LC_TIME", "English")
weekdays(.leap.seconds)
dataWithMeans$nameDay <- weekdays(dataWithMeans$date)
head(dataWithMeans)
tail(dataWithMeans)
dataWithMeans$isWeekend <- match(weekdays(dataWithMeans$date),weekend)
weekend <- c("Saturday", "Sunday")
dataWithMeans$isWeekend <- match(weekdays(dataWithMeans$date),weekend)
head(dataWithMeans)
match(weekdays(dataWithMeans$date),weekend)
weekdays(dataWithMeans$date) %in% weekend
dataWithMeans$isWeekend <- weekdays(dataWithMeans$date) %in% weekend
groupPerWeekend <- split(dataWithMeans,dataWithMeans$isWeekend)
sumStepsPerDay3 <- sapply(groupPerDay2, function(d) { sum(d[,1])})
sumStepsPerDay3 <- sapply(groupPerDay3, function(d) { sum(d[,1])})
sumStepsPerDay3 <- sapply(groupPerWeekend, function(d) { sum(d[,1])})
sumStepsPerWeekend <- sapply(groupPerWeekend, function(d) { sum(d[,1])})
hist2 <- hist(sumStepsPerWeekend,xlab="Steps")
dataWithMeans$typeDay <- if(weekdays(dataWithMeans$date) %in% weekend) "weekend" else "weekday"
dataWithMeans$typeDay <- if(weekdays(dataWithMeans$date) %in% weekend){ "weekend" }else{ "weekday"}
if(weekdays(dataWithMeans$date) %in% weekend){ "weekend" }else{ "weekday"}
groupWeekday <- split(dataWithMeans,dataWithMeans$interval+dataWithMeans$isWeekend)
groupPerInterval <- split(dataWithMeans,dataWithMeans$interval+dataWithMeans$isWeekend)
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
intervals <- unique(data$interval)
numIntervals <- seq(intervals)
minutes <- intervals[1:12]
hours <- 0:23
labelIntervals <- paste(rep(hours,each=12),minutes,sep=":")
plot(avStepsPerInterval~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
groupPerInterval <- split(dataWithMeans,dataWithMeans$interval)
avStepsPerInterval <- sapply(groupPerInterval, function(d) { mean(d[,1])})
intervals <- unique(data$interval)
numIntervals <- seq(intervals)
minutes <- intervals[1:12]
hours <- 0:23
labelIntervals <- paste(rep(hours,each=12),minutes,sep=":")
plot(avStepsPerInterval~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
dataWithMeans$isWeekend <- weekdays(dataWithMeans$date) %in% weekend
groupPerIntervalWeekdays <- dataWithMeans[,!dataWithMeans$isWeekend]
groupPerIntervalWeekends <- dataWithMeans[,dataWithMeans$isWeekend]
groupPerIntervalWeekdays <- dataWithMeans[!dataWithMeans$isWeekend,]
groupPerIntervalWeekdays <- split(groupPerIntervalWeekdays,groupPerIntervalWeekdays$interval)
avStepsPerIntervalWeekdays <- sapply(groupPerIntervalWeekdays, function(d) { mean(d[,1])})
groupPerIntervalWeekends <- dataWithMeans[dataWithMeans$isWeekend,]
groupPerIntervalWeekends <- split(groupPerIntervalWeekends,groupPerIntervalWeekends$interval)
avStepsPerIntervalWeekends <- sapply(groupPerIntervalWeekends, function(d) { mean(d[,1])})
intervals <- unique(data$interval)
numIntervals <- seq(intervals)
minutes <- intervals[1:12]
hours <- 0:23
labelIntervals <- paste(rep(hours,each=12),minutes,sep=":")
plot(avStepsPerIntervalWeekdays~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
plot(avStepsPerIntervalWeekdays~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
par(mfrow = c(2, 1))
plot(avStepsPerIntervalWeekdays~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
par(mfrow = c(2, 1))
plot(avStepsPerIntervalWeekdays~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
par(mfrow = c(2, 2))
plot(avStepsPerIntervalWeekdays~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
par(mfrow = c(2, 1))
plot(avStepsPerIntervalWeekdays~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
plot(avStepsPerIntervalWeekends~numIntervals, type="l",xlab="Hours",ylab="Average of steps",xaxt = 'n')
axis(1,cex.axis=0.7, at=numIntervals, labels=labelIntervals)
